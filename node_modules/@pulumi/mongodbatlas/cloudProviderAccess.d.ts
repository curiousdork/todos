import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
/**
 * ## Import
 *
 * The Cloud Provider Access resource can be imported using project ID and the provider name and mongodbatlas role id, in the format `project_id`-`provider_name`-`role_id`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudProviderAccess:CloudProviderAccess my_role 1112222b3bf99403840e8934-AWS-5fc17d476f7a33224f5b224e
 * ```
 */
export declare class CloudProviderAccess extends pulumi.CustomResource {
    /**
     * Get an existing CloudProviderAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProviderAccessState, opts?: pulumi.CustomResourceOptions): CloudProviderAccess;
    /**
     * Returns true if the given object is an instance of CloudProviderAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudProviderAccess;
    /**
     * Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     */
    readonly atlasAssumedRoleExternalId: pulumi.Output<string>;
    /**
     * ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     */
    readonly atlasAwsAccountArn: pulumi.Output<string>;
    /**
     * Date on which this role was authorized.
     */
    readonly authorizedDate: pulumi.Output<string>;
    /**
     * Date on which this role was created.
     */
    readonly createdDate: pulumi.Output<string>;
    /**
     * Atlas features this AWS IAM role is linked to.
     */
    readonly featureUsages: pulumi.Output<outputs.CloudProviderAccessFeatureUsage[]>;
    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     */
    readonly iamAssumedRoleArn: pulumi.Output<string | undefined>;
    /**
     * The unique ID for the project
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     */
    readonly providerName: pulumi.Output<string>;
    /**
     * Unique ID of this role returned by mongodb atlas api
     */
    readonly roleId: pulumi.Output<string>;
    /**
     * Create a CloudProviderAccess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProviderAccessArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CloudProviderAccess resources.
 */
export interface CloudProviderAccessState {
    /**
     * Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     */
    atlasAssumedRoleExternalId?: pulumi.Input<string>;
    /**
     * ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     */
    atlasAwsAccountArn?: pulumi.Input<string>;
    /**
     * Date on which this role was authorized.
     */
    authorizedDate?: pulumi.Input<string>;
    /**
     * Date on which this role was created.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Atlas features this AWS IAM role is linked to.
     */
    featureUsages?: pulumi.Input<pulumi.Input<inputs.CloudProviderAccessFeatureUsage>[]>;
    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     */
    iamAssumedRoleArn?: pulumi.Input<string>;
    /**
     * The unique ID for the project
     */
    projectId?: pulumi.Input<string>;
    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     */
    providerName?: pulumi.Input<string>;
    /**
     * Unique ID of this role returned by mongodb atlas api
     */
    roleId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CloudProviderAccess resource.
 */
export interface CloudProviderAccessArgs {
    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     */
    iamAssumedRoleArn?: pulumi.Input<string>;
    /**
     * The unique ID for the project
     */
    projectId: pulumi.Input<string>;
    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     */
    providerName: pulumi.Input<string>;
}
