import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "./types";
/**
 * `mongodbatlas.getCustomDbRoles` describe all Custom DB Roles. This represents a custom db roles.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testDatabaseUser = new mongodbatlas.DatabaseUser("testDatabaseUser", {
 *     username: "test-acc-username",
 *     password: "test-acc-password",
 *     projectId: "<PROJECT-ID>",
 *     databaseName: "admin",
 *     roles: [
 *         {
 *             roleName: "readWrite",
 *             databaseName: "admin",
 *         },
 *         {
 *             roleName: "atlasAdmin",
 *             databaseName: "admin",
 *         },
 *     ],
 * });
 * const testCustomDbRoles = mongodbatlas.getCustomDbRoles({
 *     projectId: mongodbatlas_custom_db_role.test.project_id,
 * });
 * ```
 */
export declare function getCustomDbRoles(args: GetCustomDbRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomDbRolesResult>;
/**
 * A collection of arguments for invoking getCustomDbRoles.
 */
export interface GetCustomDbRolesArgs {
    /**
     * The unique ID for the project to get all custom db roles.
     */
    projectId: string;
}
/**
 * A collection of values returned by getCustomDbRoles.
 */
export interface GetCustomDbRolesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
    /**
     * A list where each represents a custom db roles.
     */
    readonly results: outputs.GetCustomDbRolesResult[];
}
export declare function getCustomDbRolesOutput(args: GetCustomDbRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomDbRolesResult>;
/**
 * A collection of arguments for invoking getCustomDbRoles.
 */
export interface GetCustomDbRolesOutputArgs {
    /**
     * The unique ID for the project to get all custom db roles.
     */
    projectId: pulumi.Input<string>;
}
