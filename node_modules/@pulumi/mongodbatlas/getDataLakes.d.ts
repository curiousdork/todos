import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "./types";
/**
 * `mongodbatlas.getDataLakes` describe all Data Lakes.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = pulumi.output(mongodbatlas.getDataLakes({
 *     projectId: "PROJECT ID",
 * }));
 * ```
 */
export declare function getDataLakes(args: GetDataLakesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakesResult>;
/**
 * A collection of arguments for invoking getDataLakes.
 */
export interface GetDataLakesArgs {
    /**
     * The unique ID for the project to get all data lakes.
     */
    projectId: string;
}
/**
 * A collection of values returned by getDataLakes.
 */
export interface GetDataLakesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
    /**
     * A list where each represents a Data lake.
     */
    readonly results: outputs.GetDataLakesResult[];
}
export declare function getDataLakesOutput(args: GetDataLakesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLakesResult>;
/**
 * A collection of arguments for invoking getDataLakes.
 */
export interface GetDataLakesOutputArgs {
    /**
     * The unique ID for the project to get all data lakes.
     */
    projectId: pulumi.Input<string>;
}
