"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCloudProviderSnapshotRestoreJobsOutput = exports.getCloudProviderSnapshotRestoreJobs = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * **WARNING:** This datasource is deprecated, use `mongodbatlasCloudBackupSnapshotsRestoreJobs`
 *
 * `mongodbatlas.getCloudProviderSnapshotRestoreJobs` provides a Cloud Backup Snapshot Restore Jobs datasource. Gets all the cloud backup snapshot restore jobs for the specified cluster.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * First create a snapshot of the desired cluster. Then request that snapshot be restored in an automated fashion to the designated cluster and project.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testCloudProviderSnapshot = new mongodbatlas.CloudProviderSnapshot("testCloudProviderSnapshot", {
 *     projectId: "5cf5a45a9ccf6400e60981b6",
 *     clusterName: "MyCluster",
 *     description: "MyDescription",
 *     retentionInDays: 1,
 * });
 * const testCloudProviderSnapshotRestoreJob = new mongodbatlas.CloudProviderSnapshotRestoreJob("testCloudProviderSnapshotRestoreJob", {
 *     projectId: "5cf5a45a9ccf6400e60981b6",
 *     clusterName: "MyCluster",
 *     snapshotId: testCloudProviderSnapshot.id,
 *     deliveryType: [{
 *         automated: true,
 *         targetClusterName: "MyCluster",
 *         targetProjectId: "5cf5a45a9ccf6400e60981b6",
 *     }],
 * });
 * const testCloudProviderSnapshotRestoreJobs = pulumi.all([testCloudProviderSnapshotRestoreJob.projectId, testCloudProviderSnapshotRestoreJob.clusterName]).apply(([projectId, clusterName]) => mongodbatlas.getCloudProviderSnapshotRestoreJobsOutput({
 *     projectId: projectId,
 *     clusterName: clusterName,
 *     pageNum: 1,
 *     itemsPerPage: 5,
 * }));
 * ```
 */
function getCloudProviderSnapshotRestoreJobs(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudProviderSnapshotRestoreJobs:getCloudProviderSnapshotRestoreJobs", {
        "clusterName": args.clusterName,
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getCloudProviderSnapshotRestoreJobs = getCloudProviderSnapshotRestoreJobs;
function getCloudProviderSnapshotRestoreJobsOutput(args, opts) {
    return pulumi.output(args).apply(a => getCloudProviderSnapshotRestoreJobs(a, opts));
}
exports.getCloudProviderSnapshotRestoreJobsOutput = getCloudProviderSnapshotRestoreJobsOutput;
//# sourceMappingURL=getCloudProviderSnapshotRestoreJobs.js.map