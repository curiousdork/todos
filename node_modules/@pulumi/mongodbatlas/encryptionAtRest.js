"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EncryptionAtRest = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class EncryptionAtRest extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["awsKms"] = state ? state.awsKms : undefined;
            resourceInputs["awsKmsConfig"] = state ? state.awsKmsConfig : undefined;
            resourceInputs["azureKeyVault"] = state ? state.azureKeyVault : undefined;
            resourceInputs["azureKeyVaultConfig"] = state ? state.azureKeyVaultConfig : undefined;
            resourceInputs["googleCloudKms"] = state ? state.googleCloudKms : undefined;
            resourceInputs["googleCloudKmsConfig"] = state ? state.googleCloudKmsConfig : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["awsKms"] = args ? args.awsKms : undefined;
            resourceInputs["awsKmsConfig"] = args ? args.awsKmsConfig : undefined;
            resourceInputs["azureKeyVault"] = args ? args.azureKeyVault : undefined;
            resourceInputs["azureKeyVaultConfig"] = args ? args.azureKeyVaultConfig : undefined;
            resourceInputs["googleCloudKms"] = args ? args.googleCloudKms : undefined;
            resourceInputs["googleCloudKmsConfig"] = args ? args.googleCloudKmsConfig : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(EncryptionAtRest.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing EncryptionAtRest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new EncryptionAtRest(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EncryptionAtRest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EncryptionAtRest.__pulumiType;
    }
}
exports.EncryptionAtRest = EncryptionAtRest;
/** @internal */
EncryptionAtRest.__pulumiType = 'mongodbatlas:index/encryptionAtRest:EncryptionAtRest';
//# sourceMappingURL=encryptionAtRest.js.map