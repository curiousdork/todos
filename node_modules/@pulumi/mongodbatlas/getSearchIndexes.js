"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearchIndexesOutput = exports.getSearchIndexes = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas.getSearchIndexes` describe all search indexes. This represents search indexes that have been created.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = pulumi.output(mongodbatlas.getSearchIndex({
 *     clusterName: "<CLUSTER_NAME>",
 *     collectionName: "<COLLECTION_NAME>",
 *     databaseName: "<DATABASE_NAME>",
 *     itemsPerPage: 100,
 *     pageNum: 1,
 *     projectId: "<PROJECT_ID>",
 * }));
 * ```
 */
function getSearchIndexes(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchIndexes:getSearchIndexes", {
        "clusterName": args.clusterName,
        "collectionName": args.collectionName,
        "database": args.database,
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getSearchIndexes = getSearchIndexes;
function getSearchIndexesOutput(args, opts) {
    return pulumi.output(args).apply(a => getSearchIndexes(a, opts));
}
exports.getSearchIndexesOutput = getSearchIndexesOutput;
//# sourceMappingURL=getSearchIndexes.js.map