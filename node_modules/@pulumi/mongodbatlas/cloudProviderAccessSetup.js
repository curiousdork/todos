"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudProviderAccessSetup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class CloudProviderAccessSetup extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["awsConfigs"] = state ? state.awsConfigs : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["aws"] = undefined /*out*/;
            resourceInputs["awsConfigs"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(CloudProviderAccessSetup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing CloudProviderAccessSetup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CloudProviderAccessSetup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CloudProviderAccessSetup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProviderAccessSetup.__pulumiType;
    }
}
exports.CloudProviderAccessSetup = CloudProviderAccessSetup;
/** @internal */
CloudProviderAccessSetup.__pulumiType = 'mongodbatlas:index/cloudProviderAccessSetup:CloudProviderAccessSetup';
//# sourceMappingURL=cloudProviderAccessSetup.js.map