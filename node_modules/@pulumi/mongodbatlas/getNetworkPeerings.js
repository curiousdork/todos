"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetworkPeeringsOutput = exports.getNetworkPeerings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas.getNetworkPeerings` describes all Network Peering Connections.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
 *
 * ## Example Usage
 * ### Basic Example (AWS).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testNetworkPeering = new mongodbatlas.NetworkPeering("testNetworkPeering", {
 *     accepterRegionName: "us-east-1",
 *     projectId: "<YOUR-PROJEC-ID>",
 *     containerId: "507f1f77bcf86cd799439011",
 *     providerName: "AWS",
 *     routeTableCidrBlock: "192.168.0.0/24",
 *     vpcId: "vpc-abc123abc123",
 *     awsAccountId: "abc123abc123",
 * });
 * const testNetworkPeerings = mongodbatlas.getNetworkPeeringsOutput({
 *     projectId: testNetworkPeering.projectId,
 * });
 * ```
 */
function getNetworkPeerings(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getNetworkPeerings:getNetworkPeerings", {
        "projectId": args.projectId,
    }, opts);
}
exports.getNetworkPeerings = getNetworkPeerings;
function getNetworkPeeringsOutput(args, opts) {
    return pulumi.output(args).apply(a => getNetworkPeerings(a, opts));
}
exports.getNetworkPeeringsOutput = getNetworkPeeringsOutput;
//# sourceMappingURL=getNetworkPeerings.js.map