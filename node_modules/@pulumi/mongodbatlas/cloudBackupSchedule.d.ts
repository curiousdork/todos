import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
/**
 * ## Import
 *
 * Cloud Backup Schedule entries can be imported using project_id and cluster_name, in the format `PROJECTID-CLUSTERNAME`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule test 5d0f1f73cf09a29120e173cf-MyClusterTest
 * ```
 *
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/schedule/modify-one-schedule/)
 */
export declare class CloudBackupSchedule extends pulumi.CustomResource {
    /**
     * Get an existing CloudBackupSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudBackupScheduleState, opts?: pulumi.CustomResourceOptions): CloudBackupSchedule;
    /**
     * Returns true if the given object is an instance of CloudBackupSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudBackupSchedule;
    /**
     * Unique identifier of the Atlas cluster.
     */
    readonly clusterId: pulumi.Output<string>;
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * Unique identifier of the backup policy.
     */
    readonly idPolicy: pulumi.Output<string>;
    /**
     * Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
     */
    readonly nextSnapshot: pulumi.Output<string>;
    /**
     * Daily policy item
     */
    readonly policyItemDaily: pulumi.Output<outputs.CloudBackupSchedulePolicyItemDaily | undefined>;
    /**
     * Hourly policy item
     */
    readonly policyItemHourly: pulumi.Output<outputs.CloudBackupSchedulePolicyItemHourly | undefined>;
    /**
     * Monthly policy item
     */
    readonly policyItemMonthly: pulumi.Output<outputs.CloudBackupSchedulePolicyItemMonthly | undefined>;
    /**
     * Weekly policy item
     */
    readonly policyItemWeekly: pulumi.Output<outputs.CloudBackupSchedulePolicyItemWeekly | undefined>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    readonly referenceHourOfDay: pulumi.Output<number>;
    /**
     * UTC Minutes after `referenceHourOfDay` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    readonly referenceMinuteOfHour: pulumi.Output<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    readonly restoreWindowDays: pulumi.Output<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    readonly updateSnapshots: pulumi.Output<boolean>;
    /**
     * Create a CloudBackupSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudBackupScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CloudBackupSchedule resources.
 */
export interface CloudBackupScheduleState {
    /**
     * Unique identifier of the Atlas cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy.
     */
    idPolicy?: pulumi.Input<string>;
    /**
     * Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
     */
    nextSnapshot?: pulumi.Input<string>;
    /**
     * Daily policy item
     */
    policyItemDaily?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemDaily>;
    /**
     * Hourly policy item
     */
    policyItemHourly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemHourly>;
    /**
     * Monthly policy item
     */
    policyItemMonthly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemMonthly>;
    /**
     * Weekly policy item
     */
    policyItemWeekly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemWeekly>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId?: pulumi.Input<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    referenceHourOfDay?: pulumi.Input<number>;
    /**
     * UTC Minutes after `referenceHourOfDay` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    referenceMinuteOfHour?: pulumi.Input<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    restoreWindowDays?: pulumi.Input<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    updateSnapshots?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a CloudBackupSchedule resource.
 */
export interface CloudBackupScheduleArgs {
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Daily policy item
     */
    policyItemDaily?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemDaily>;
    /**
     * Hourly policy item
     */
    policyItemHourly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemHourly>;
    /**
     * Monthly policy item
     */
    policyItemMonthly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemMonthly>;
    /**
     * Weekly policy item
     */
    policyItemWeekly?: pulumi.Input<inputs.CloudBackupSchedulePolicyItemWeekly>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: pulumi.Input<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    referenceHourOfDay?: pulumi.Input<number>;
    /**
     * UTC Minutes after `referenceHourOfDay` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    referenceMinuteOfHour?: pulumi.Input<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    restoreWindowDays?: pulumi.Input<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    updateSnapshots?: pulumi.Input<boolean>;
}
