"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectOutput = exports.getProject = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas.Project` describes a MongoDB Atlas Project. This represents a project that has been created.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 * ### Using projectId attribute to query
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testMongodbatlasProject = new mongodbatlas.Project("test", {
 *     orgId: "<ORG_ID>",
 *     teams: [
 *         {
 *             roleNames: ["GROUP_OWNER"],
 *             teamId: "5e0fa8c99ccf641c722fe645",
 *         },
 *         {
 *             roleNames: [
 *                 "GROUP_READ_ONLY",
 *                 "GROUP_DATA_ACCESS_READ_WRITE",
 *             ],
 *             teamId: "5e1dd7b4f2a30ba80a70cd4rw",
 *         },
 *     ],
 * });
 * const testProject = testMongodbatlasProject.id.apply(id => mongodbatlas.getProject({
 *     projectId: id,
 * }));
 * ```
 */
function getProject(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getProject:getProject", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}
exports.getProject = getProject;
function getProjectOutput(args, opts) {
    return pulumi.output(args).apply(a => getProject(a, opts));
}
exports.getProjectOutput = getProjectOutput;
//# sourceMappingURL=getProject.js.map