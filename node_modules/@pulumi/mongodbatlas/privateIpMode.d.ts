import * as pulumi from "@pulumi/pulumi";
/**
 * `mongodbatlas.PrivateIpMode` provides a Private IP Mode resource. This allows one to disable Connect via Peering Only mode for a MongoDB Atlas Project.
 *
 * > **Deprecated Feature**: <br> This feature has been deprecated. Use [Split Horizon connection strings](https://dochub.mongodb.org/core/atlas-horizon-faq) to connect to your cluster. These connection strings allow you to connect using both VPC/VNet Peering and whitelisted public IP addresses. To learn more about support for Split Horizon, see [this FAQ](https://dochub.mongodb.org/core/atlas-horizon-faq). You need this endpoint to [disable Peering Only](https://docs.atlas.mongodb.com/reference/faq/connection-changes/#disable-peering-mode).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const myPrivateIpMode = new mongodbatlas.PrivateIpMode("my_private_ip_mode", {
 *     enabled: false,
 *     projectId: "<YOUR PROJECT ID>",
 * });
 * ```
 *
 * ## Import
 *
 * Project must be imported using project ID, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/privateIpMode:PrivateIpMode my_private_ip_mode 5d09d6a59ccf6445652a444a
 * ```
 *
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/get-private-ip-mode-for-project/)
 */
export declare class PrivateIpMode extends pulumi.CustomResource {
    /**
     * Get an existing PrivateIpMode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateIpModeState, opts?: pulumi.CustomResourceOptions): PrivateIpMode;
    /**
     * Returns true if the given object is an instance of PrivateIpMode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PrivateIpMode;
    /**
     * Indicates whether Connect via Peering Only mode is enabled or disabled for an Atlas project
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The unique ID for the project to enable Only Private IP Mode.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Create a PrivateIpMode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateIpModeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PrivateIpMode resources.
 */
export interface PrivateIpModeState {
    /**
     * Indicates whether Connect via Peering Only mode is enabled or disabled for an Atlas project
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The unique ID for the project to enable Only Private IP Mode.
     */
    projectId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PrivateIpMode resource.
 */
export interface PrivateIpModeArgs {
    /**
     * Indicates whether Connect via Peering Only mode is enabled or disabled for an Atlas project
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The unique ID for the project to enable Only Private IP Mode.
     */
    projectId: pulumi.Input<string>;
}
