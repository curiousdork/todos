"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearchIndexOutput = exports.getSearchIndex = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `mongodbatlas.SearchIndex` describe a single search indexes. This represents a single search index that have been created.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = pulumi.output(mongodbatlas.getSearchIndex({
 *     clusterName: "<CLUSTER_NAME>",
 *     indexId: "<INDEX_ID",
 *     projectId: "<PROJECT_ID>",
 * }));
 * ```
 */
function getSearchIndex(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchIndex:getSearchIndex", {
        "analyzer": args.analyzer,
        "analyzers": args.analyzers,
        "clusterName": args.clusterName,
        "collectionName": args.collectionName,
        "database": args.database,
        "indexId": args.indexId,
        "mappingsDynamic": args.mappingsDynamic,
        "mappingsFields": args.mappingsFields,
        "name": args.name,
        "projectId": args.projectId,
        "searchAnalyzer": args.searchAnalyzer,
        "status": args.status,
    }, opts);
}
exports.getSearchIndex = getSearchIndex;
function getSearchIndexOutput(args, opts) {
    return pulumi.output(args).apply(a => getSearchIndex(a, opts));
}
exports.getSearchIndexOutput = getSearchIndexOutput;
//# sourceMappingURL=getSearchIndex.js.map